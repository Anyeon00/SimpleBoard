<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.infra.mybatis.MyBatisUserRepository">

<!-- Long save(User user) -->
<insert id="save" parameterType="User">
	<!-- PK 자동 생성 : 내 블로그 "Oracle 사용방법 비교 정리"" 참고-->
	<selectKey keyProperty="userId" resultType="Long" order="BEFORE">
    	select seq_user.nextval from dual
	</selectKey>
	insert into "user"(user_id, username, "password") values(#{userId}, #{username}, #{password}) 
</insert>  

<!-- List<User> findAll(); -->
<select id="findAll" resultType="User">
	select * from "user"
</select>

<!-- void remove(Long userId) -->
<delete id="remove" parameterType="Long">
	delete from "user" where user_id=#{userId}
</delete>


<!-- 
	[기타 설명]
	- Oracle 예약어는 ""로 감싸야함
	 
	[속성 설명]
	id : 메서드이름
	
	parameterType : 파라미터가 있는 쿼리에서 파라미터의 타입을 명시
	- parameterType을 객체로 지정시, SQL 문에서 해당 객체의 필드명을 바로 사용할 수 있습 (getter 이용)
	- parameterType이 여러개인 경우, @Param 어노테이션을 사용하면 parameterType 생략가능
	  ex)
	  void updateUser(@Param("id") Long id, @Param("name") String name);
	  <update id="updateUser">
    	UPDATE users 
    	SET name = #{name} 
    	WHERE id = #{id}
      </update>


	resultType : 반환값 타입
	- select의 경우, returnType을 객체로 설정해도 컬럼을 선택적으로 조회가능 (선택하지 않은 컬럼은 null) (선택조회시 성능향상)
	- 메서드 리턴타입이 리스트면 속성을 객체로 설정해도 자동으로 리스트로 반환
	- insert & update의 경우, 자동으로 업데이트 행 갯수 반환(정수형 타입 고정). 따라서 returnType 지정 불가능
	- insert시 id를 반환하고 싶다면, insert시 자바객체에 id가 자동 주입되므로 메서드에서 직접 객체의 id를 꺼내 반환 _UserRepositoryImpl의 save() 참고
	
	keyProperty : User 객체의 userId 필드에 시퀀스 값을 설정
-->
</mapper>
